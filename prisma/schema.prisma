// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User model for authentication
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  wallets   Wallet[]
  exchanges Exchange[]
}

// Wallet model to track different wallets
model Wallet {
  id           String   @id @default(cuid())
  name         String
  address      String
  provider     String
  userId       String
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@unique([address, provider])
  @@index([userId])
}

// Exchange model to track different exchanges
model Exchange {
  id        String   @id @default(cuid())
  name      String
  apiKey    String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

// Updated Transaction model based on user's SQL schema
model Transaction {
  // Core fields
  id                 Int       @id @default(autoincrement())
  type               String    @db.VarChar(50)
  subtype            String?   @db.VarChar(50)
  status             String    @default("pending") @db.VarChar(30)
  source             String?   @db.VarChar(100)
  source_type        String?   @db.VarChar(30)

  // Asset details
  asset_symbol       String    @db.VarChar(50)
  asset_address      String?   @db.VarChar(255)
  asset_chain        String?   @db.VarChar(30)

  // Financial details
  amount_value       Decimal   @db.Decimal(30, 15)
  price_per_unit     Decimal?  @db.Decimal(30, 15)
  value_usd          Decimal   @db.Decimal(30, 15)

  // Wallet/Counterparty details
  wallet_address       String?   @db.VarChar(100)
  counterparty_address String?   @db.VarChar(100)

  // On-chain details
  tx_hash            String?   @unique @db.VarChar(255)
  chain              String?   @db.VarChar(30)
  block_number       BigInt?
  explorer_url       String?   @db.Text

  // Timestamps
  tx_timestamp       DateTime  @db.Timestamptz(6)
  createdAt          DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt          DateTime  @updatedAt @map("updated_at") @db.Timestamptz(6)

  // Review/Notes
  identified         Boolean   @default(false)
  notes              String?   @db.Text

  // Indexes
  @@index([wallet_address])
  @@index([tx_timestamp])
  @@index([type])
  @@index([identified])
  @@index([chain])

  // Map model name to table name
  @@map("transactions")
} 